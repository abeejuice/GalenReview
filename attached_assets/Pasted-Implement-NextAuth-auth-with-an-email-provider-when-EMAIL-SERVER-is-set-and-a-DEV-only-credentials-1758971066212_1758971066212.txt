Implement NextAuth auth with an email provider (when EMAIL_SERVER is set) and a DEV-only credentials fallback (when not set). Add RBAC guards and header UI.

Return ONLY code blocks, one per file, in the format:

// path: <relative file path>
<full file contents>

If a file already exists, replace it completely.

Also update package.json if you add new deps.

Files to output:

1) src/app/api/auth/[...nextauth]/route.ts
- NextAuth config:
  - If process.env.EMAIL_SERVER is set, enable EmailProvider using EMAIL_SERVER and EMAIL_FROM from env, and use JWT sessions.
  - If EMAIL_SERVER is NOT set, enable a DEV-only CredentialsProvider:
      * Accept "email" input; if it contains "@", sign the user in as a REVIEWER (for development only).
      * Reject in production (NODE_ENV === 'production').
  - Include callbacks to expose user { id, email, role } in JWT and session.
  - Default role = 'REVIEWER' on first sign-in.
  - Do NOT require a Prisma adapter (keep it adapter-free for now to avoid DB coupling for email tokens).
  - Export { handlers: { GET, POST }, auth: { signIn, signOut } } as per NextAuth for App Router.

2) src/app/(auth)/sign-in/page.tsx
- Simple form with an email input.
- On submit:
  - If EMAIL_SERVER is set: call signIn('email', { email })
  - Else: call signIn('credentials', { email })
- Show a small note if running in DEV credentials mode (when EMAIL_SERVER is not configured).

3) src/middleware.ts
- Protect all routes except:
  - ^/api/auth
  - ^/sign-in
  - ^/_next
  - ^/favicon.ico
  - ^/api/health
- If unauthenticated, redirect to /sign-in.
- Allow static files.
- Export a config matcher for all app routes.

4) src/lib/auth.ts
- Helpers:
  - getSessionServer(): getServerSession wrapper for App Router route handlers.
  - requireRole(allowedRoles: ('CONTRIBUTOR'|'REVIEWER')[]): throws if session missing or role not in allowed.

5) Update src/app/layout.tsx
- If user is logged in, show their email and role in the header and a "Sign out" button.
- If not logged in, show a "Sign in" link to /sign-in.

6) src/app/api/health/route.ts
- Simple health endpoint returning { ok: true, time, env: NODE_ENV }.

7) package.json
- Ensure "next-auth" exists in dependencies.
- Add "typecheck": "tsc --noEmit" if missing.

IMPORTANT:
- Use only the files above, fully-formed code with imports.
- Do NOT include prose outside the code blocks.