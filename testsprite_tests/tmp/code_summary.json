{
  "tech_stack": [
    "TypeScript",
    "Next.js 14.2.5",
    "React",
    "Tailwind CSS",
    "NextAuth.js",
    "Prisma ORM",
    "PostgreSQL",
    "Node.js"
  ],
  "features": [
    {
      "name": "Health Check API",
      "description": "Returns server health status and environment information",
      "files": ["src/app/api/health/route.ts"],
      "api_doc": {
        "paths": {
          "/api/health": {
            "get": {
              "summary": "Health Check",
              "responses": {
                "200": {
                  "description": "Server health status",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "ok": { "type": "boolean" },
                          "time": { "type": "string" },
                          "env": { "type": "string" },
                          "requestId": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Items Management API",
      "description": "CRUD operations for medical content items (flashcards, MCQs)",
      "files": ["src/app/api/items/route.ts", "src/app/api/items/[id]/route.ts"],
      "api_doc": {
        "paths": {
          "/api/items": {
            "get": {
              "summary": "Get all items with filtering",
              "parameters": [
                { "name": "subject", "in": "query", "schema": { "type": "string" } },
                { "name": "type", "in": "query", "schema": { "type": "string" } },
                { "name": "status", "in": "query", "schema": { "type": "string" } },
                { "name": "flag", "in": "query", "schema": { "type": "string" } },
                { "name": "limit", "in": "query", "schema": { "type": "integer" } }
              ],
              "responses": {
                "200": {
                  "description": "List of items",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "type": { "type": "string" },
                            "subject": { "type": "string" },
                            "topic": { "type": "string" },
                            "status": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/items/{id}": {
            "get": {
              "summary": "Get item by ID",
              "parameters": [
                { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
              ],
              "responses": {
                "200": { "description": "Item details" },
                "404": { "description": "Item not found" }
              }
            },
            "patch": {
              "summary": "Update item status",
              "parameters": [
                { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string" }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": { "description": "Item updated" },
                "400": { "description": "Invalid status" }
              }
            }
          }
        }
      }
    },
    {
      "name": "Analytics API",
      "description": "Provides analytics data for content review dashboard",
      "files": ["src/app/api/analytics/route.ts"],
      "api_doc": {
        "paths": {
          "/api/analytics": {
            "get": {
              "summary": "Get analytics data",
              "responses": {
                "200": {
                  "description": "Analytics data",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "totals": {
                            "type": "object",
                            "properties": {
                              "total": { "type": "integer" },
                              "needsReview": { "type": "integer" },
                              "changesRequested": { "type": "integer" },
                              "published": { "type": "integer" }
                            }
                          },
                          "typeDistribution": { "type": "array" },
                          "topSubjects": { "type": "array" },
                          "quality": { "type": "object" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Journal API",
      "description": "CRUD operations for journal notes",
      "files": ["src/app/api/journal/route.ts"],
      "api_doc": {
        "paths": {
          "/api/journal": {
            "get": {
              "summary": "Get journal notes",
              "responses": {
                "200": {
                  "description": "List of journal notes",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "content": { "type": "string" },
                            "userId": { "type": "string" },
                            "createdAt": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "summary": "Create journal note",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "content": { "type": "string" },
                        "itemId": { "type": "string" }
                      },
                      "required": ["content"]
                    }
                  }
                }
              },
              "responses": {
                "201": { "description": "Note created" },
                "400": { "description": "Invalid content" }
              }
            }
          }
        }
      }
    },
    {
      "name": "Content Intake API",
      "description": "API for submitting new content (flashcards and MCQs)",
      "files": ["src/app/api/intake/flashcard/route.ts", "src/app/api/intake/mcq/route.ts"],
      "api_doc": {
        "paths": {
          "/api/intake/flashcard": {
            "post": {
              "summary": "Submit flashcard content",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "subject": { "type": "string" },
                        "topic": { "type": "string" },
                        "front": { "type": "string" },
                        "back": { "type": "string" }
                      },
                      "required": ["subject", "topic", "front", "back"]
                    }
                  }
                }
              },
              "responses": {
                "201": { "description": "Flashcard created" },
                "400": { "description": "Invalid data" }
              }
            }
          },
          "/api/intake/mcq": {
            "post": {
              "summary": "Submit MCQ content",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "subject": { "type": "string" },
                        "topic": { "type": "string" },
                        "question": { "type": "string" },
                        "options": { "type": "array" },
                        "correctAnswer": { "type": "string" }
                      },
                      "required": ["subject", "topic", "question", "options", "correctAnswer"]
                    }
                  }
                }
              },
              "responses": {
                "201": { "description": "MCQ created" },
                "400": { "description": "Invalid data" }
              }
            }
          }
        }
      }
    },
    {
      "name": "Authentication API",
      "description": "NextAuth.js authentication endpoints",
      "files": ["src/app/api/auth/[...nextauth]/route.ts", "src/lib/auth.ts"],
      "api_doc": {
        "paths": {
          "/api/auth/signin": {
            "get": {
              "summary": "Sign in page"
            }
          },
          "/api/auth/session": {
            "get": {
              "summary": "Get current session"
            }
          },
          "/api/auth/callback/credentials": {
            "post": {
              "summary": "Handle credentials authentication"
            }
          }
        }
      }
    }
  ]
}